name: FastAPI CI/CD

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install virtualenv

      # Cache Virtual Environment
      - name: Cache Virtual Environment
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      # Create and Activate Virtual Environment (if needed)
      - name: Setup Virtual Environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      # Run Tests
      - name: Run Tests
        run: |
          source .venv/bin/activate
          pytest

      # Create archive of dependency files (Fixed paths)
      - name: Archive dependencies
        run: |
          mkdir -p ${GITHUB_WORKSPACE}/artifacts
          cd .venv/lib/python3.9/site-packages
          
          # Debugging: Ensure files exist
          ls -lah  
          
          # Ensure valid zip creation
          if [ "$(ls -A .)" ]; then
            zip -r ${GITHUB_WORKSPACE}/artifacts/api.zip ./*
          else
            echo "No files found, skipping zip creation."
          fi

      # Add API files to Zip (Corrected Command)
      - name: Add API files to Zip
        run: |
          cd ${GITHUB_WORKSPACE}
          zip -r artifacts/api.zip ./api

      # Upload the zip file as an artifact (Fixed name consistency)
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v4
        with:
          name: api  # Must match download step
          path: ${GITHUB_WORKSPACE}/artifacts/api.zip
          retention-days: 5  # Prevent expiration issues

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      # Install AWS CLI (Official Method)
      - name: Install or Update AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version

      # Configure AWS credentials
      - name: Set up AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # Download zip file artifact (Fixed name match)
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v4
        with:
          name: api  # Must match upload step
          path: artifacts

      # Upload to AWS S3 (Fixed file naming consistency)
      - name: Upload to S3
        run: |
          aws s3 cp artifacts/api.zip s3://fastapiride/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      # Deploy to AWS Lambda (Fixed reference to correct zip file)
      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code --function-name fastapi --s3-bucket fastapiride --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
